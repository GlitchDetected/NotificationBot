@import "tailwindcss";
@import "tw-animate-css";

@custom-variant dark (&:is(.dark *));

@theme {
  --background-image-gradient-radial: radial-gradient(var(--tw-gradient-stops));
  --background-image-gradient-conic: conic-gradient(
    from 180deg at 50% 50%,
    var(--tw-gradient-stops)
  );

  --radius-lg: var(--radius);
  --radius-md: calc(var(--radius) - 2px);
  --radius-sm: calc(var(--radius) - 4px);

  --color-background: hsl(var(--background));
  --color-foreground: hsl(var(--foreground));

  --color-card: hsl(var(--card));
  --color-card-foreground: hsl(var(--card-foreground));

  --color-popover: hsl(var(--popover));
  --color-popover-foreground: hsl(var(--popover-foreground));

  --color-primary: hsl(var(--primary));
  --color-primary-foreground: hsl(var(--primary-foreground));

  --color-secondary: hsl(var(--secondary));
  --color-secondary-foreground: hsl(var(--secondary-foreground));

  --color-muted: hsl(var(--muted));
  --color-muted-foreground: hsl(var(--muted-foreground));

  --color-accent: hsl(var(--accent));
  --color-accent-foreground: hsl(var(--accent-foreground));

  --color-destructive: hsl(var(--destructive));
  --color-destructive-foreground: hsl(var(--destructive-foreground));

  --color-border: hsl(var(--border));
  --color-input: hsl(var(--input));
  --color-ring: hsl(var(--ring));

  --color-chart-1: hsl(var(--chart-1));
  --color-chart-2: hsl(var(--chart-2));
  --color-chart-3: hsl(var(--chart-3));
  --color-chart-4: hsl(var(--chart-4));
  --color-chart-5: hsl(var(--chart-5));
}

@layer base {
  *,
  ::after,
  ::before,
  ::backdrop,
  ::file-selector-button {
    border-color: var(--color-gray-200, currentColor);
  }
}

@layer utilities {
  html,
  body {
    background-color: #000000 !important;
  }

  .avatar-animation:hover {
    transform: rotateZ(1.6deg) rotateY(10deg);
  }
}

@layer base {
  :root {
    --background: 0 60% 15%; /* dark red tone */
    --foreground: 30, 6%, 38%;

    --card: 0 0% 8%;
    --card-foreground: 0 0% 100%;

    --popover: 0 60% 15%;
    --popover-foreground: 0 70% 85%;

    --primary: 0 70% 50%; /* vivid red */
    --primary-foreground: 0 0% 100%;

    --secondary: 0 60% 40%; /* darker red */
    --secondary-foreground: 0 0% 100%;

    --muted: 0 40% 60%; /* muted dark red */
    --muted-foreground: 0 40% 30%;

    --accent: 0 60% 80%; /* light red */
    --accent-foreground: 0 0% 100%;

    --destructive: 0 80% 50%; /* bright red */
    --destructive-foreground: 0 0% 100%;

    --border: 0 40% 60%;
    --input: 0 40% 60%;
    --ring: 0 70% 50%; /* red */

    --chart-1: 0 70% 50%;
    --chart-2: 0 60% 45%;
    --chart-3: 0 50% 50%;
    --chart-4: 0 60% 60%;
    --chart-5: 0 80% 50%;

    --radius: 0.5rem;
  }

  .dark {
    --background: 0 70% 10%;
    --foreground: 30, 6%, 38%;

    --card: 0 0% 18%;
    --card-foreground: 0 0% 100%;

    --popover: 0 0% 18%;
    --popover-foreground: 0 0% 100%;

    --primary: 0 70% 50%; /* vivid red */
    --primary-foreground: 0 0% 100%;

    --secondary: 0 70% 40%; /* darker red */
    --secondary-foreground: 0 0% 100%;

    --muted: 0 40% 30%; /* muted red */
    --muted-foreground: 0 0% 100%;

    --accent: 0 30% 25%; /* very dark red accent */
    --accent-foreground: 0 0% 100%;

    --destructive: 0 80% 40%; /* bright red */
    --destructive-foreground: 0 0% 100%;

    --border: 0 40% 30%;
    --input: 0 40% 30%;
    --ring: 0 70% 60%; /* red */

    --chart-1: 0 70% 60%;
    --chart-2: 0 70% 50%;
    --chart-3: 0 50% 50%;
    --chart-4: 0 60% 60%;
    --chart-5: 0 80% 50%;
  }
}

div[id="bg"] {
    background-image: linear-gradient(175deg, rgb(66, 42, 126) 0%, var(--background-rgb) 75%);
}

::selection {
  background-color: hsl(345, 85%, 20%);
  color: hsl(0, 100%, 90%);
}

@keyframes ScaleBlink {
  50% {
      transform: scale(1.2) rotate(12deg);
  }
}

.svg-max svg {
  height: 100%;
  width: 100%;
}

.scrollbar-none::-webkit-scrollbar {
  display: none;
}

.scrollbar-none {
  -ms-overflow-style: none;
  scrollbar-width: none;
}

::selection {
  background-color: #B32126;
}

::-webkit-scrollbar {
  width: 4px;
  background: var(--background-rgb);
}

::-webkit-scrollbar-thumb {
  background: #B32126;
  border-radius: 2px;
}

::-webkit-scrollbar-thumb:hover {
  background: #B32126;
}

@layer components {
  .container {
    padding: 1rem;
    margin-inline: auto;
    max-width: 100%;
  }
  @media (min-width: 640px) {
    .container {
      max-width: 640px;
    }
  }
  @media (min-width: 768px) {
    .container {
      max-width: 768px;
    }
  }
  @media (min-width: 1024px) {
    .container {
      max-width: 1024px;
    }
  }
  @media (min-width: 1280px) {
    .container {
      max-width: 1280px;
    }
  }
}

.animate-scroll {
  border: 2px solid #460809;
  height: 2.2rem;
  position: relative;
  width: 20px;
}

.animate-scroll-wheel {
  animation: scroll 2.5s ease infinite;
  background: #460809;
  border-radius: 1rem;
  height: 0.5rem;
  left: calc(50% - 1.5px);
  position: absolute;
  right: 50%;
  top: 8px;
  width: 3px;
}

@keyframes scroll {
  0% {
      transform: translateY(0);
  }

  50% {
      transform: translateY(0.5rem);
  }

  51% {
      opacity: 1;
  }

  100% {
      opacity: 0;
      transform: translateY(0);
  }
}

@keyframes marquee-left {
  from {
    transform: translateX(0);
  }
  to {
    transform: translateX(calc(-100% - var(--gap)));
  }
}

.animate-marquee-left {
  animation: marquee-left var(--duration, 40s) linear infinite;
}

@keyframes marquee-up {
  from {
    transform: translateY(0);
  }
  to {
    transform: translateY(calc(-100% - var(--gap)));
  }
}

.animate-marquee-up {
  animation: marquee-up var(--duration, 40s) linear infinite;
}
.flex-row {
  flex-direction: row;
}
.flex-col {
  flex-direction: column;
}
.justify-around {
  justify-content: space-around;
}
.gap-\[1rem\] {
  gap: 1rem;
}
.overflow-hidden {
  overflow: hidden;
}

@keyframes enter {
  from {
    opacity: var(--tw-enter-opacity, 1);
    transform: translate3d(var(--tw-enter-translate-x, 0), var(--tw-enter-translate-y, 0), 0) scale3d(var(--tw-enter-scale, 1), var(--tw-enter-scale, 1), var(--tw-enter-scale, 1)) rotate(var(--tw-enter-rotate, 0));
  }
}
@keyframes exit {
  to {
    opacity: var(--tw-exit-opacity, 1);
    transform: translate3d(var(--tw-exit-translate-x, 0), var(--tw-exit-translate-y, 0), 0) scale3d(var(--tw-exit-scale, 1), var(--tw-exit-scale, 1), var(--tw-exit-scale, 1)) rotate(var(--tw-exit-rotate, 0));
  }
}
.direction-reverse {
  animation-direction: reverse;
}
.\[--gap\:1rem\] {
  --gap: 1rem;
}
.group:hover .group-hover\:\[animation-play-state\:paused\] {
  animation-play-state: paused;
}